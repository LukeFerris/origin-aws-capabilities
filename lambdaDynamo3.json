{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Transform": "AWS::Serverless-2016-10-31",
  "Parameters": {
    "RootStackName": {
      "Type": "String",
      "Description": "The name of the root stack"
    },
    // Auth parameters should only be included if authentication is in play according to the specification - otherwise, remove the parameters section
    "Issuer": {
      "Type": "String",
      "Description": "The issuer URL for the Cognito User Pool (e.g., https://cognito-idp.<region>.amazonaws.com/<user-pool-id>)"
    },
    "Audience": {
      "Type": "CommaDelimitedList",
      "Description": "The audience for the Cognito User Pool client (list of client IDs)"
    }
  },
  "Outputs": {
    "[CELL_ID]Url": {
      "Description": "The HTTP API Gateway url for the created lambda",
      "Value": {
        "Fn::Sub": "https://${[CELL_ID]HttpApi}.execute-api.${AWS::Region}.amazonaws.com"
      }
    }
  },
  "Resources": {
    "[CELL_ID]HttpApi": {
      "Type": "AWS::Serverless::HttpApi",
      "Properties": {
        "CorsConfiguration": {
          "AllowOrigins": ["*"],
          "AllowHeaders": ["*"],
          "AllowMethods": ["*"],
          "ExposeHeaders": ["X-Total-Count"]
        },
        // Auth should only be included if requested by the specification - otherwise, remove this section
        "Auth": {
          "DefaultAuthorizer": "CognitoAuthorizer",
          "Authorizers": {
            "CognitoAuthorizer": {
              "JwtConfiguration": {
                "issuer": {
                  "Ref": "Issuer"
                },
                "audience": {
                  "Ref": "Audience"
                }
              },
              "IdentitySource": "$request.header.Authorization"
            }
          }
        },
        "FailOnWarnings": true
      }
    },
    "[CELL_ID]Table": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "BillingMode": "PAY_PER_REQUEST",
        "TableName": {
          "Fn::Sub": "${RootStackName}-[CELL_ID]"
        },
        "AttributeDefinitions": [
          {
            "AttributeName": "AddKeyIdNameHere",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "AddKeyIdNameHere",
            "KeyType": "HASH"
          }
        ]
      }
    },
    "[CELL_ID]": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "FunctionName": {
          "Fn::Sub": "${RootStackName}-[LOWER_CASE_CELL_ID_MAX5]Lambda"
        },
        "Description": {
          "Fn::Sub": [
            "Stack ${AWS::StackName} Function ${ResourceName}",
            {
              "ResourceName": "[CELL_ID]"
            }
          ]
        },
        "Layers": [
          "arn:aws:lambda:eu-central-1:360520317360:layer:generalLayer:113"
        ],
        "CodeUri": "../../working/[CELL_ID]",
        "Handler": "index.handler",
        "Runtime": "nodejs18.x",
        "Events": {
          "HttpApiGET": {
            "Type": "HttpApi",
            "Properties": {
              "Path": "/{[Update with id from guidance]}",
              "Method": "GET",
              "ApiId": {
                "Ref": "[CELL_ID]HttpApi"
              }
            }
          },
          "HttpApiGETMultiple": {
            "Type": "HttpApi",
            "Properties": {
              "Path": "/",
              "Method": "GET",
              "ApiId": {
                "Ref": "[CELL_ID]HttpApi"
              }
            }
          },
          "HttpApiPUT": {
            "Type": "HttpApi",
            "Properties": {
              "Path": "/{[Update with id from guidance]}",
              "Method": "PUT",
              "ApiId": {
                "Ref": "[CELL_ID]HttpApi"
              }
            }
          },
          "HttpApiPOST": {
            "Type": "HttpApi",
            "Properties": {
              "Path": "/",
              "Method": "POST",
              "ApiId": {
                "Ref": "[CELL_ID]HttpApi"
              }
            }
          },
          "HttpApiDELETE": {
            "Type": "HttpApi",
            "Properties": {
              "Path": "/{[Update with id from guidance]}",
              "Method": "DELETE",
              "ApiId": {
                "Ref": "[CELL_ID]HttpApi"
              }
            }
          }
        },
        "Role": {
          "Fn::GetAtt": ["LambdaRole[CELL_ID]", "Arn"]
        },
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "[CELL_ID]Table"
            },
            "SESSION_TABLE": "[SESSION_TRACKING_TABLE_NAME]"
          }
        }
      }
    },
    "LambdaRole[CELL_ID]": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "LambdaExecutionPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                    "secretsmanager:GetSecretValue"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:PutItem",
                    "dynamodb:GetItem",
                    "dynamodb:UpdateItem",
                    "dynamodb:DeleteItem",
                    "dynamodb:Scan",
                    "dynamodb:Query"
                  ],
                  "Resource": {
                    "Fn::GetAtt": ["[CELL_ID]Table", "Arn"]
                  }
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:PutItem",
                    "dynamodb:GetItem",
                    "dynamodb:UpdateItem",
                    "dynamodb:DeleteItem",
                    "dynamodb:Scan",
                    "dynamodb:Query"
                  ],
                  "Resource": {
                    "Fn::Sub": "arn:aws:dynamodb:eu-central-1:360520317360:table/origin-staging-user-tracking"
                  }
                }
              ]
            }
          }
        ]
      }
    }
  }
}
