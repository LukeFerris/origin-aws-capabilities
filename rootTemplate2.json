{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Transform": "AWS::Serverless-2016-10-31",
  // The root level template should never have any parameters expected
  "Outputs": {
    // ensure you include all outputs exposed by all nested stacks with the same name as shown in the nested stack
    // never include any outputs NOT exposed by the nested stacks
    // example (note the specific Fn::Sub syntax):
    // "AwsCognitoUrl": {
    //   "Description": "The URL of the Cognito Admin Function API",
    //   "Value": {
    //     "Fn::Sub": "${AwsCognitoStack.Outputs.AwsCognitoUrl}"
    //   }
    // },
  },
  "Resources": {
    // example resource - always use single lower case letter names for nested stacks e.g. a, b, c, d.
    "a": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        // the template URLs are always in the same folder
        "TemplateURL": "./FileNameShownAbove_Cloudformation.json",
        "Parameters": {
          // we always include the root stack name as a parameter for all nested stacks - make sure you add it for all nested stacks
          // Note that the root should be the AWS::StackName plus the lower case letter of the nested stack (to make it unique)
          "RootStackName": {
            "Fn::Sub": "${AWS::StackName}-a-"
          }
          // any parameters from other nested stacks go here - there are no input parameters for the parent stack
          // note the use of Fn::Sub to extract the nested stack output
          // An example is:
          //           "AnotherStack": {
          //     "Type": "AWS::CloudFormation::Stack",
          //     "Properties": {
          //         "TemplateURL": "../SomeOtherStack/template.json",
          //         "Parameters": {
          //             "UserPoolId": {
          //                 "Fn::Sub": "${AWSCognitoStack.Outputs.AWSCognitoUserPoolId}"
          //             }
          //         }
          //     }
          // }
        }
      }
    }
  }
}
