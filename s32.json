{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Transform": "AWS::Serverless-2016-10-31",
  // Auth parameters should only be included if authentication is in play according to the specification - otherwise, remove the parameters section
  "Parameters": {
    "Issuer": {
      "Type": "String",
      "Description": "The issuer URL for the Cognito User Pool (e.g., https://cognito-idp.<region>.amazonaws.com/<user-pool-id>)"
    },
    "Audience": {
      "Type": "CommaDelimitedList",
      "Description": "The audience for the Cognito User Pool client (list of client IDs)"
    }
  },
  "Outputs": {
    "[CELL_ID]BucketURL": {
      "Description": "URL of the S3 bucket website",
      "Value": {
        "Fn::Sub": "https://${[CELL_ID]PublicS3Bucket}.s3.${AWS::Region}.amazonaws.com"
      }
    },
    "[CELL_ID]Url": {
      "Description": "The HTTP API Gateway url for the created lambda",
      "Value": {
        "Fn::Sub": "https://${[CELL_ID]HttpApi}.execute-api.${AWS::Region}.amazonaws.com"
      }
    }
  },
  "Resources": {
    "[CELL_ID]PublicS3Bucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": {
          "Fn::Sub": "${AWS::StackName}[LOWER_CASE_CELL_ID]bucket"
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": false,
          "IgnorePublicAcls": false,
          "BlockPublicPolicy": false,
          "RestrictPublicBuckets": false
        },
        "CorsConfiguration": {
          "CorsRules": [
            {
              "AllowedHeaders": ["*"],
              "AllowedMethods": ["GET", "PUT"],
              "AllowedOrigins": ["*"],
              "MaxAge": 3600
            }
          ]
        }
      }
    },
    "[CELL_ID]BucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "PolicyDocument": {
          "Id": "S3Policy",
          "Statement": [
            {
              "Sid": "RequireEncryptionInTransit",
              "Principal": "*",
              "Action": "*",
              "Effect": "Deny",
              "Resource": [
                {
                  "Fn::GetAtt": ["[CELL_ID]PublicS3Bucket", "Arn"]
                },
                { "Fn::Sub": "${[CELL_ID]PublicS3Bucket.Arn}/*" }
              ],
              "Condition": { "Bool": { "aws:SecureTransport": "false" } }
            },
            {
              "Sid": "PublicReadGetObject",
              "Principal": "*",
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": { "Fn::Sub": "${[CELL_ID]PublicS3Bucket.Arn}/*" }
            }
          ]
        },
        "Bucket": { "Ref": "[CELL_ID]PublicS3Bucket" }
      }
    },
    "[CELL_ID]HttpApi": {
      "Type": "AWS::Serverless::HttpApi",
      "Properties": {
        "CorsConfiguration": {
          "AllowOrigins": ["*"],
          "AllowHeaders": ["*"],
          "AllowMethods": ["*"],
          "ExposeHeaders": ["X-Total-Count"]
        },
        "FailOnWarnings": true,
        // Auth should only be included if the OpenAPI spec shows authentication
        "Auth": {
          "DefaultAuthorizer": "CognitoAuthorizer",
          "Authorizers": {
            "CognitoAuthorizer": {
              "JwtConfiguration": {
                "issuer": {
                  "Ref": "Issuer"
                },
                "audience": {
                  "Ref": "Audience"
                }
              },
              "IdentitySource": "$request.header.Authorization"
            }
          }
        }
      }
    },
    "[CELL_ID]UploadUrlAPI": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "FunctionName": {
          "Fn::Sub": "[SOLUTION_ID_SHORT]-[CELL_ID]UploadUrlAPI"
        },
        "CodeUri": "../../working/[CELL_ID]",
        "Handler": "index.handler",
        "Runtime": "nodejs18.x",
        "MemorySize": 3008,
        "Timeout": 30,
        "Tracing": "Active",
        "Layers": [
          "arn:aws:lambda:eu-central-1:360520317360:layer:generalLayer:113"
        ],
        "Events": {
          "HttpApiGET": {
            "Type": "HttpApi",
            "Properties": {
              "Path": "/",
              "Method": "GET",
              "ApiId": { "Ref": "[CELL_ID]HttpApi" }
            }
          }
        },
        "Environment": {
          "Variables": { "BUCKET_NAME": { "Ref": "[CELL_ID]PublicS3Bucket" } }
        },
        "Role": {
          "Fn::GetAtt": ["LambdaRole[CELL_ID]", "Arn"]
        }
      }
    },
    "LambdaRole[CELL_ID]": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "LambdaExecutionPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                    "secretsmanager:CreateSecret",
                    "secretsmanager:PutSecretValue",
                    "secretsmanager:UpdateSecret",
                    "secretsmanager:DeleteSecret",
                    "secretsmanager:DescribeSecret"
                  ],
                  "Resource": "*"
                }
              ]
            }
          },
          {
            "PolicyName": "AWSXrayWriteOnlyAccess",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "xray:PutTraceSegments",
                    "xray:PutTelemetryRecords"
                  ],
                  "Resource": "*"
                }
              ]
            }
          },
          {
            "PolicyName": "S3CrudPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:PutObject",
                    "s3:GetObject",
                    "s3:DeleteObject",
                    "s3:ListBucket"
                  ],
                  "Resource": [
                    { "Fn::Sub": "arn:aws:s3:::${[CELL_ID]PublicS3Bucket}" },
                    { "Fn::Sub": "arn:aws:s3:::${[CELL_ID]PublicS3Bucket}/*" }
                  ]
                }
              ]
            }
          },
          {
            "PolicyName": "AdditionalDynamoDBAccess",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:PutItem",
                    "dynamodb:GetItem",
                    "dynamodb:UpdateItem",
                    "dynamodb:DeleteItem",
                    "dynamodb:Scan",
                    "dynamodb:Query"
                  ],
                  "Resource": "arn:aws:dynamodb:eu-central-1:360520317360:table/origin-staging-user-tracking"
                }
              ]
            }
          }
        ]
      }
    }
  }
}
