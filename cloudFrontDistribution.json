{
  "Resources": {
    "PublicSite": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": {
          "Fn::Sub": "${AWS::StackName}-origin-public-site"
        },
        "WebsiteConfiguration": {
          "IndexDocument": "index.html",
          "ErrorDocument": "index.html"
        }
      }
    },
    "PublicSiteBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": { "Ref": "PublicSite" },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": { "Service": "apigateway.amazonaws.com" },
              "Action": "s3:GetObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  ["arn:aws:s3:::", { "Ref": "PublicSite" }, "/*"]
                ]
              }
            }
          ]
        }
      }
    },
    "PublicApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "PublicSiteApi",
        "Description": "API Gateway to serve a React SPA from an S3 bucket"
      }
    },
    "PublicApiResource": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": { "Fn::GetAtt": ["PublicApi", "RootResourceId"] },
        "PathPart": "{proxy+}",
        "RestApiId": { "Ref": "PublicApi" }
      }
    },
    "PublicApiMethod": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "ResourceId": { "Ref": "PublicApiResource" },
        "RestApiId": { "Ref": "PublicApi" },
        "AuthorizationType": "NONE",
        "Integration": {
          "Type": "AWS",
          "IntegrationHttpMethod": "GET",
          "Uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:s3:path/${PublicSite}/index.html"
          },
          "Credentials": { "Fn::GetAtt": ["ApiGatewayS3Role", "Arn"] }
        },
        "IntegrationResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Content-Type": "'text/html'"
            },
            "ResponseTemplates": {
              "text/html": "" // Pass HTML response as-is
            }
          }
        ],
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseModels": {
              "text/html": "Empty"
            },
            "ResponseParameters": {
              "method.response.header.Content-Type": true
            }
          }
        ]
      }
    },
    "ApiGatewayS3Role": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "ApiGatewayS3AccessPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "s3:GetObject",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      ["arn:aws:s3:::", { "Ref": "PublicSite" }, "/*"]
                    ]
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "PublicApiDeployment": {
      "Type": "AWS::ApiGateway::Deployment",
      "DependsOn": ["PublicApiMethod"],
      "Properties": {
        "RestApiId": { "Ref": "PublicApi" }
      }
    },
    "PublicApiStage": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "RestApiId": { "Ref": "PublicApi" },
        "DeploymentId": { "Ref": "PublicApiDeployment" },
        "StageName": "prod"
      }
    },
    "ApiCustomDomain": {
      "Type": "AWS::ApiGateway::DomainName",
      "Properties": {
        "DomainName": "buildsight-maintain-pro-14097ebe.theorigin.ai",
        "RegionalCertificateArn": "arn:aws:acm:eu-central-1:360520317360:certificate/95ccd728-1b70-4db5-9d23-3e871f1f25ca",
        "EndpointConfiguration": {
          "Types": ["REGIONAL"]
        }
      }
    },
    "ApiDomainMapping": {
      "Type": "AWS::ApiGateway::BasePathMapping",
      "Properties": {
        "DomainName": { "Ref": "ApiCustomDomain" },
        "RestApiId": { "Ref": "PublicApi" },
        "Stage": "prod"
      }
    },
    "Route53Record": {
      "Type": "AWS::Route53::RecordSetGroup",
      "Properties": {
        "HostedZoneId": "Z0774359MJ4TNSWB6K7M",
        "RecordSets": [
          {
            "Name": "buildsight-maintain-pro-14097ebe.theorigin.ai",
            "Type": "A",
            "AliasTarget": {
              "HostedZoneId": {
                "Fn::GetAtt": ["ApiCustomDomain", "RegionalHostedZoneId"]
              },
              "DNSName": {
                "Fn::GetAtt": ["ApiCustomDomain", "RegionalDomainName"]
              }
            }
          }
        ]
      }
    }
  }
}
